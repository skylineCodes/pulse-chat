payload:
  - path: "usernames.csv"
    fields:
      - username
    timeout: 30000
config:
  target: "http://localhost" # WebSocket endpoint of your chat-server
  socketio:
    transports: ['websocket']
    query:
      username: "{{ username }}" # Using dynamic usernames
  phases:
    - duration: 60  # Duration: 1 seconds
      arrivalRate: 50  # Start with 500 users per second
      rampTo: 300

scenarios:
  - name: 'Join a room'
    engine: socketio
    flow:
      # Step 1: Join a room
      - emit:
          channel: 'join room'
          data:
            username: "{{ $randomString(10) }}"  # Dynamic username from payload
            recipient: "{{ $randomString(10) }}"  # Dynamic recipient from payload
            roomId: "{{ uuid() }}"  # Randomly generated UUID for roomId

      # Step 2: Send a message after joining
      - emit:
          channel: "chat message"  # Socket.IO event for sending a message
          data:
            username: "{{ $randomString(10) }}"  # Same user ID for consistency
            roomId: "{{ uuid() }}"
            message: "Hello, {{ $randomString(10) }}!"  # Example message
            timestamp: "{{ Date.now() }}"  # Current timestamp